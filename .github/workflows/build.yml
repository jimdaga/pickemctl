# This workflow will build a golang project and create releases
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Generate version tag
      id: version
      run: |
        # Create version based on date and short commit hash
        VERSION="v$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"

    - name: Build release binaries
      run: |
        # Build for multiple platforms
        mkdir -p dist
        
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o dist/pickemctl-linux-amd64 .
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -o dist/pickemctl-linux-arm64 .
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o dist/pickemctl-darwin-amd64 .
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o dist/pickemctl-darwin-arm64 .
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o dist/pickemctl-windows-amd64.exe .

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: "PickemCTL ${{ steps.version.outputs.VERSION }}"
        body: |
          ## PickemCTL Release ${{ steps.version.outputs.VERSION }}
          
          Automated release from commit: ${{ github.sha }}
          
          ### Changes
          - Built from latest main branch
          - Includes all recent features and bug fixes
          
          ### Downloads
          Choose the appropriate binary for your platform:
          - **Linux (x64)**: `pickemctl-linux-amd64`
          - **Linux (ARM64)**: `pickemctl-linux-arm64`
          - **macOS (Intel)**: `pickemctl-darwin-amd64`
          - **macOS (Apple Silicon)**: `pickemctl-darwin-arm64`
          - **Windows (x64)**: `pickemctl-windows-amd64.exe`
          
          ### Installation
          1. Download the appropriate binary for your platform
          2. Make it executable: `chmod +x pickemctl-*` (Linux/macOS)
          3. Copy to your PATH or run directly: `./pickemctl-*`
          
          ### Configuration
          ```bash
          cp config.yaml.example config.yaml
          # Edit config.yaml with your database settings
          ./pickemctl-* userStats
          ```
        files: |
          dist/pickemctl-linux-amd64
          dist/pickemctl-linux-arm64
          dist/pickemctl-darwin-amd64
          dist/pickemctl-darwin-arm64
          dist/pickemctl-windows-amd64.exe
        generate_release_notes: true
        make_latest: true
